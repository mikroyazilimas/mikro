@model Telerik.Sitefinity.Frontend.Mvc.Models.ContentListViewModel
@using Telerik.Sitefinity.DynamicModules.Model;
@using SitefinityWebApp.Mvc.Models.ViewModel;
@using Telerik.Sitefinity.Model;
@{
    List<KeyValuePair<string, string>> groups = Model.Items.Select(p => new KeyValuePair<string, string>(((ChoiceOption)p.Fields.GroupName).Text, ((ChoiceOption)p.Fields.GroupName).PersistedValue)).Distinct().ToList();
    List<LogoImage> LogoImageGroups = Model.Items.GroupBy(p => ((ChoiceOption)p.Fields.GroupName).Text).Select(x => new LogoImage
    {
        Group = x.Key,
        Items = x.Select(xx => new LogoImageItem
        {
            Title = xx.Fields.Title,
            File = ((Telerik.Sitefinity.Libraries.Model.Document)xx.Fields.File.DataItem).MediaUrl,
            Image = ((Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel)xx.Fields.Image).Fields.MediaUrl
        }).ToList()
    }).OrderBy(p => groups.FirstOrDefault(pp => pp.Key == p.Group).Value).ToList();
}
<div class="container-sub">

    @foreach (var ItemGroup in LogoImageGroups)
    {
        if (ItemGroup.Group != "Empty")
        {
            <div class="logo-title">
                <h2>@ItemGroup.Group</h2>
            </div>
        }
        <div class="logo-content">
            @foreach (var item in ItemGroup.Items)
            {
                <div class="logo-content-item">
                    <a href="@item.File" target="_blank">

                        <div class="logo-content-item-img">
                            <img src="@item.Image" alt="">
                        </div>
                        <div class="logo-content-item-title">
                            <span>@item.Title</span>
                        </div>
                    </a>
                </div>
            }
        </div>
    }
</div>

